#
#oracle 11g database concepts
#
#
#

1.table and table clusters
  1.1 schema objects(模式对象)
      一个用户拥有一个同名的模式对象。一个模式对象包含了该用户及相关数据。
      模式对象类型：table,index,partition,view,sequence,synonym,pl/sql 
      模式对象的存储：tables,indexes,partitions存储在segement(段)中,其他保存在元数据中，像view，sequence。
  当数据库创建时，会有两个模式也会默认一起创建，SYS,SYSTEM。 sys模式下存储数据字典，system存储显示管理信息的附加表和视图。 
  
  1.2表的种类：
     1.relational tables 关系表
       关系表有两种类型：
        1.heap-organized table 
          堆组织表就是普通的表，create table..不以特定的顺序存储行，也就是说数据是无序的。
        2.index-organized table 
          索引组织表，数据是有序的。
        3.external tables 
          外部表，元数据(即表结构什么的)存储在数据库中，但是数据存储在数据库之外。  
     2.objects tables 对象表
    表可以是permanent(永久的)或者temporary(临时的)。
    永久表与临时表的区别是，元数据都是一样永久定义的，但是永久表的数据永久存在，而临时表的数据只存在与会话或者事务中。   
      
   虚拟列：是某个列上的表达式或者函数，不占用磁盘空间。例如，income字段就是sal跟commission_pct的虚拟列。   
      
 1.3字段的数据类型：character numberic datetime rowid 
   varchar2跟char类型值的比较，
   Oracle Database compares VARCHAR2 values using nonpadded comparison semantics and compares CHAR values using blank-padded comparison semantics.
   oracle将varchar2填充空白然后再跟char进行比较。
   
   The NCHAR and NVARCHAR2 data types store Unicode character data. 
   Unicode is a universal encoded character set that can store information in any language using a single character set.
   NCHAR stores fixed-length character strings that correspond to the national character set, 
   whereas NVARCHAR2 stores variable length character strings.  
   --NCHAR 跟NVARCHAR2存储Unicode字符数据。
   --Unicode是一种通用编码字符集，可以用单个字符集存储任何语言中的信息。
   --NCHAR存储固定长度的字符串对应的国家字符集，而NVARCHAR2存储可变长度的字符串
   
   nvarcahr2跟varchar2的区别：
   nvarchar2(10) 不论存什么都可以存十个。
   varchar2(10) 可以存5个汉字或者10个英文字母。
   
   RR跟YY的区别：
   如果现在是1999年 09 RR会翻译成2009 YY会翻译成1909.RR的意思是离当前时间最近的时间，YY仅仅是本世纪的年份。
   24小时格式 HH:MI:SS
   
   全局临时表
    表的元数据存储在数据字典中，表的数据只在当前会话或者事务中插入可见，当结束事务或者会话时，数据消失。数据存储在临时段中，将会在事务或者会话结束时回收。
    /***************************************************************************************************************/
    Because temporary tables are statically defined, you can create indexes for them with the CREATE INDEX statement. 
    Indexes created on temporary tables are also temporary. 
    The data in the index has the same session or transaction scope as the data in the temporary table. 
    You can also create a view or trigger on a temporary table.
    Temporary segments are deallocated at the end of the transaction for transaction-specific temporary tables and 
    at the end of the session for session-specific temporary tables.
    /**************************************************************************************************************/
    create global temporary table ... on commit
   
   External table 外部表
   表结构在数据库中，但是数据在数据库之外。可通过sql，pl/sql，java访问数据。通常在数据仓库环境，ETL任务中使用。
   sql*loader，sqldump就是使用的外部表。
   外部表不支持索引，虚拟列，列对象，且外部表是只读的。
   CREATE TABLE ... ORGANIZATION EXTERNAL --创建外部表
   
   
   
