#
#
#
#
#


事务的特性(ACID)
 A：原子性，不可分割
 C：一致性。
 I：隔离性
 D：持久性

事务的开始与结束。
 开始于DML语句.
 结束于commit,rollback.或者DDL语句


SCN: system change number 是不重复递增序列
 在修改之前先记录SCN，避免不必要的重做。

事务名称：
 SET TRANSACTION NAME '...';--必须在整个事务的一开始定义事务名称。
 好处：
  1.比较容易监视长时间的事务和解决分布式事务中的问题。
  2.可以在应用程序中查看事务名称和id
  3.可以使用logminer搜索重做日志中的事务。
  4.用名称在V$TRANSACITON找到相关信息。
  
 active transaction:（活跃事务）事务开始，在提交或者回退之前都是活跃的。
  事务结束之前，数据的变化：
   1.在SGA中生成撤销数据。
   2.在redo file log 中生成重做信息。
   3.修改的数据会被存到DB BUFFER中，在commit之后，数据会写到磁盘。
   4.修改行会被锁定。
 
 savepoints：
  把长事务划分成几个小的。
  rollback to savepoint 发生的事：
   1.只将savepoint之后的语句rollback
   2.所有的子savepoint将会丢失
   3.会释放相关的锁
  
 Enqueued Transactions（排队事务）:
  session1改emp中jane的sal，在没提交或者rollback之前，这时session2也改这个人的sal，就会发生阻塞，session2就是排队事务。
  
rollback：
 1.根据相关的undo段，还原数据
 2.释放所有相关的锁
 3.擦除所有的savepoint
 4.结束事务
 
commit：
 1.产生一个SCN
 2.lgwr将log写进online redo log
 3.释放锁
 4.擦除所有的savepoint
 5.commit清除
 6.结束事务
 commit的时间长短与修改的内容的多少无关，跟lgwr的磁盘I/O有关。   
   
 
