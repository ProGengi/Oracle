#
#
#
#
#

表的种类
 1.堆组织表(heap orgnized table):就是普通的表，数据以堆的方式管理。
 2.索引组织表(index orgnized table):数据按照索引结构存储。
 3.嵌套表(nested table):可以认为emp是dept的子表，因为emp有个外键deptno指向dept。嵌套表与子表的区别是嵌套表不像子表那样是独立表。
 4.临时表(temporary table):
 5.外部表(external table):数据存放在操作系统文件中
 6.分区表(partition table):
   分区的好处：
   1.改善查询性能(分区消除)
   2.减少管理负担
   3.提高可用性(假如有100GB的表，分成10个区，其中某个10G的分区遭到破坏，修复时只要修复这个分区就可以了。)
  
  四种分区方法
  1.列表
   partition by list(A)
   (partition p1 values ('A','B','C'),
    partition p2 values ('d','e'))
  2.范围
    create table t()
    partition by range(A)
    (partition p1 values less than 100,
     partition p2 values less than maxvalue)
  3.hash
    create table t()
    partition by hash(t)
    (partition p1 tablespace t1,
     partition p2 tablespace t2)
    hash分区时，分区的个数最好是2的N次方个。 
  4.组合
  
  分区索引
  每个分区表都有一个分区索引，这叫局部索引。
 
 高水位线(high-water-mark,HWM).
 随着数据的插入，高水位线会越来越高，但是删除(delete)数据并不会降低高水位线。直到重建或者截断表。
 Oracle全表扫描时，会扫描HWM之下所有的数据块，即使其中不包含任何数据，这回影响全表扫描的性能，尤其是HWM下空块较多的情况下。
 
 
 临时表用于保存事务或者会话期间的中间结果集。临时表中的数据，只有当前会话可见，其他会话不可见。
 临时表有两种：
 1.基于会话的
  create global temporary table temp_session
  on commit preserve rows
  as slect * from t where 1=0;
  
 2.基于事务的
  create global temporary table temp_trans
  on commit delete rows
  as select * from t where 1=0;
  临时表并不支持以下特性：
   不能引用完整性约束。不能创建外键。
   不能是IOT
   不能分区
   不能通过analyze生成统计信息
   
 
