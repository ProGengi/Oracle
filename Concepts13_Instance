#
#
#
#
#

Instance:
 实例是内存组成的。
 数据库是数据文件组成的。

SGA的作用：
 1.存储sql的执行计划
 2.缓存从磁盘中读取的数据
 3.在写进在线重做日志之前缓存redo数据
 
 Oracle System Identifier (SID)：
  On UNIX and Linux, Oracle Database uses the SID and Oracle home values to create a key to shared memory. 
  Also, the SID is used by default to locate the parameter file, which is used to locate relevant files such as the database control files.


instance startup and shutdown
 shutdown》》》》nomount》》》》》mount》》》》open
 phase 1：
 Instance started without mounting database
 The instance is started, but is not yet associated with a database.
 寻找参数文件(parameter file)以初始化参数，如果没找到需要用户指定spfile或者pfile startup
 分配SGA，启动进程
 
 phase 2：
 Database mounted
 The instance is started and is associated with a database by reading its control file . 
 The database is closed to users.
 从控制文件中获得数据文件和在线重做日志文件。
 如果cluster_database 参数是false那么只能有一个实例打开数据库。如果是ture那么允许多个实例打开数据库。

 phase 3：
 Database open
 The instance is started and is associated with an open database. 
 The data contained in the data files is accessible to authorized users.
 获取undo 表空间
 打开在线重做日志文件
 
只读模式：
 不能在数据文件和在线重做日志文件中进行写操作。

shutdown：
 modes：
                       abort      immediate   transactional  normal
允许新的连接              no         no            no           no
等待直到当前会话完成       no         no            no           yes
等待直到当前事务完成       no         no            yes          yes
执行检查点并关闭文件       no         yes           yes          yes

当其他关闭数据库的命令都没有用时，可以使用shutdown abort.这是关机最快的，因为不要将打开的数据文件设置检查点，但也是开机最慢的，因为要实例恢复。
immediate ： 事务被终止，未提交的被回滚。
transactional： 等待当前事务结束
normal ： 默认的关闭模式，等待所有连接的用户断开连接。

正常关闭数据库所做的事：
 将SGA中的数据写进到数据文件和在线重做日志文件。然后将online data file 跟online redo log file置为offline。
非正常关闭数据库做的事：
 非正常关闭就不会将数据写进数据文件和日志文件了。随后打开数据库时会自动恢复实例。


checkpoint：
  作用：
   1.减少实例或者介质失败时恢复的时间
   2.确保脏块规则地写进数据块
   3.确保已提交的数据在shutdown时写进磁盘
  
  检查点的类型：
   1. thread checkpoint(线程检查点)：
      发生的情况：
       1.一致的数据库关闭 
       2.ALTER SYSTEM CHECKPOINT 语句 
       3.在线重做日志切换
       4.ALTER DATABASE BEGIN BACKUP 语句
   2.Tablespace and data file checkpoints
     
   3.Incremental checkpoints(增量检查点)
   
  Instance recovery：
   当先前关闭数据库不一致时，再次打开数据库时就会自动启动实例恢复进程。
   使用的文件是在线重做日志文件和在线数据文件。
   实例恢复取决于redo线程的状态，在可读写模式的数据库实例的控制文件中，redo 线程的状态是open，在一致性关闭的情况下是close。
   如果redo线程的状态是open但是没有实例的进程与之想对应，就需要实例恢复。
   实例恢复利用检查点的位置来决定数据文件中的哪些数据需要更改。
   检查点的位置决定了每个低于已提交的的SCN的SCN保存到数据文件中。
   
  实例恢复步骤：
   ？？？？？
   
   
 参数文件：
  server parameter file 
  实例读取初始化参数文件是在startup时。
  大部分初始化参数都属于以下分组类型：
   1.命名实体文件或者目录的参数
   2.设置进程，数据库资源或者数据库本身的参数
   3.影响容量的参数例如SGA
   
 初始化参数分为两种：
  1.基础(必须调整差不多30个参数才能保证数据库性能)
    数据库名字，位置，控制文件，数据块大小，undo表空间等
  2.高级
 
 server parameter file：
  只有一个，并且在数据库主机上。
  不能被数据库以外的其他应用读写。
  是二进制文件不能用文本编辑。
  任何参数的修改都可以在启动或者关闭时持久存在。
  
  spfile是由pfile 用 create spfile 语句得到的。也可以直接从DBCA得到。
  
  Text Initialization Parameter Files = pfile：
  在启动或者关闭数据库时，需要每个客户端上有pfile。
  是文本文件
  数据库只能读取pfile不能编辑，如果要编辑只能用文本编辑器编辑。
  用alter system修改参数只能在当前实例生效，如果想永久生效需要手动修改pfile。
  
静态修改参数与动态修改参数的区别：
 动态只是在当前实例中生效，重启数据库之后不生效，因为不会写到参数文件。
 静态修改需要重启数据库才能生效。
 
 later system set .. scope = memory/spfile/both
 memory :只在当前实例中生效，重启后无效
 spfile :只在重启之后生效，当前无效
 both   :当前实例生效，重启之后也生效(default)
 
 
Diagnostic Files(诊断文件):
 
 
 
 
