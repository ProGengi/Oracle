#
#
#
#
#

files generates when create database:
 1.Data files and temp files
 2.control files
 3.online redo log files
 
mechanism of storing database files:
 1.Oracle Automatic Storage Management (Oracle ASM)
 2.Operating system file system
 3.Raw device(裸设备)
 4.Cluster file system
 
数据库可以采用混合的方式存储数据库文件。

ASM:
 
 
data file：
 每个数据库至少有一个数据文件。
 
 表空间跟数据文件关系：
  1.表空间可以有多个数据文件。
  2.一个段可以跨越一个或者多个数据文件，但是不可以跨越多个表空间。
  3.数据库必须要有的两个表空间：system sysaux。当创建数据库时，自动为system表空间分配一个datafile。
    system表空间中包含data dictionary。

permanment and temporary datafile
permanment datafile：
temporary datafile：存储会话期间的模式对象。
temporary tablespace 中有temporary datafile 在hash，sort等操作时使用。当内存空间不足时，临时文件也存储结果数据。

永久数据文件与临时文件的差异：
1.永久的数据对象不会存到临时文件中。
2.临时文件的模式被设置成nologging，也就意味着没有redo log。
3.不能将临时文件设置为只读
4.不能用alter database 语句来创建tempfile
5.When you create or resize temp files, they are not always guaranteed allocation of disk space for the file size specified。
  On file systems such as Linux and UNIX, temp files are created as sparse files. 
  In this case, disk blocks are allocated not at file creation or resizing, but as the blocks are accessed for the first time.
  当您创建或调整临时文件时，它们并不总是保证指定文件大小的磁盘空间分配。
6.临时文件的相关信息在dba_temp_files和dynamic performance view V$tempfile中。  
  
online and offline datafile：
 每个数据文件都是online(可用)或者offline(不可用)的。offline datafile 不可以访问。
 使datafile offline的原因有很多：脱机备份，重命名数据文件，块损坏。当数据库不能对数据文件进行写操作时，会自动将数据文件offline。
 表空间也是有online，offline的，当给一个datafile置为offline后，所在的表空间还是online。通过将表空间本省不可用，来让所有数据文件不可用。
 
数据文件的结构：
 data file header：包括的元数据有，文件的大小，检查点SCN.
 每个头文件包含一个绝对文件号和一个相对文件号。绝对文件号唯一标识数据库中的数据文件。相对文件号唯一标识表空间中的数据文件。
 
control files：
 一个数据库只有一个控制文件，但是可以有多个备份。
 控制文件是用来找到数据文件和管理数据库的根文件。
 控制文件包括的内容：
  1.The database name and database unique identifier (DBID)
  2.The time stamp of database creation
  3.Information about data files, online redo log files, and archived redo log files
  4.Tablespace information
  5.RMAN backups
 控制文件用于以下目的：
  1.包含数据库所需要的数据文件，在线重做日志文件等。
  For example, when an administrator adds, renames, or drops a data file or online redo log file, the database updates the control file to reflect this change.
  2.它包含在数据库未打开时必须访问的元数据。
 
 If a control file becomes unusable, then the database instance fails when it attempts to access the damaged control file. 
 When other current control file copies exist, the database can be remounted and opened without media recovery. 
 If all control files of a database are lost, however, then the instance fails and media recovery is required. 
 Media recovery is not straightforward if an older backup of a control file must be used because a current copy is not available.
 
 控制文件的相关信息都可以在V$中找到。
 
 
 Online Redo Log
  after an instance failure the online redo log files enable Oracle Database to recover committed data not yet written to the data files.
  数据库将每个事务同步到redo log buffer，将来redo log buffer 会写到日志文件。
  Oracle数据库至少需要两个文件以保证一个随时可写而另一个被归档（如果数据库是ARCHIVELOG模式）。
  同一时间只会有一个日志文件被写，这个文件叫做current online redo log file.
  日志文件的切换发生在一个写完要切换到另一个文件的时候。
  通常是有两组每组有两个日志文件，每组的日志文件都一样大，写完第一组才会去写第二组。
 归档日志文件是在线日志文件的复制。此文件不被视为数据库的一部分，但是由数据库创建并写入用户指定位置的联机重做日志文件的脱机副本。
 

实例(instance) 与数据库(database) 的定义
  instance:是内存与进程的集合。
  database:是操作系统文件与磁盘的集合。
  一个数据库可以有多个实例，但一个实例只能打开一个数据库。

 文件
-------------------------------------------------------------------------------
 参数文件(parameter file) 在 oracle database reference 中有每个参数的详细解释
 保存控制文件的位置，指定某些初始化参数，这些参数大多定义内存结构有多大。

 init file     init<SID>.ora
 服务器参数文件(server parameter file)：spfile<ORACLE_SID>.ora
 服务器参数文件只能放在服务器本机，不能放在客户机上。

 查看一个参数值可以通过以下两种方法：
 1.select value from V$parameter where name='';
 2.show parameter pga_agg //show parameter会自动模糊查询。

 两种设置各个参数值：
 1.只设置当前实例的参数值。//修改spfile.ora立即生效
 2.永久地设置。 修改init.ora

 最基本的init.ora文件
 db_name='orcl'
 db_block_size='8192'
 control_files=''

 假设有个数据库使用了以前遗留的参数文件，那么创建spfile：
 sql> create spfile from pfile;
 在重启之后就可以了。
 在集群环境中，所有实例使用同一个spfile.

 修改spfile中的值：
 因为spfile是二进制文件，所以修改只能用alter system的方式
 alter system set parameter = value <comment='text'><deferred>
       <scope=memory|spfile|both><sid='sid|*'>;
 scope = memory 只在实例中修改，数据库重启之后不保存。
 scope = spfile 只修改参数文件中的值，只有在数据库重启之后才会生效。
 scpoe = both 立即生效，且在参数文件中修改。(默认)
 sid 是集群才用得到的参数。

 example:
 sql>alter system set pga_aggreedate_target = 1024m;

 取消spfile设置的值。
 alter system reset parameter <scope=memory|spfile|both> sid='sid|*';

 从spfile创建pfile
 sql>create pfile='/tmp/pfile.txt' from spfile;
 这样创建pfile的原因：
 1.创建一个一次性的参数文件，用于启动数据库。启动完成之后，数据库使用的参数文件依然是spfile.
 2.维护修改历史。

 修复被破坏的spfile。
 1.在unix上
 >string spfile<>.ora //就可以看到spfile的值，然后将其粘贴到init.ora然后用create spfile from pfile即可。
 2.万一spfile丢失了
 在数据库的警告日志可以恢复参数文件。

-------------------------------------------------------------------------------
 跟踪文件(trace file)
 通常是服务器进程对某种异常错误条件做出响应时创建的诊断文件


 警告文件(alert file)

-------------------------------------------------------------------------------
 数据文件(data file)
 主要存放数据表，索引，和其他段。
 数据文件的大小限制公式：db_block_size*2^22(4194304) block_size=8k时，单个数据文件最大为32G.
 原因：oracle用22位rowid来表示block号，22位最多只能代表2^22-1个数据块。
 rowid的组成：data_object_id#+rfile#+block#+row#
 一个扩展rowid采用10个byte来存储，共80bit，其中obj#32bit,rfile#10bit,block#22bit,row#16bit
 
 查看数据文件的大小：
 select file_name,bytes/2014/1024||'M' file_size from dba_data_files;
 
 

 存储层次体系
 段(segement):表，索引，回滚段。
   创建一个表时，会创建一个表段。创建分区表时，每个分区就是一个段。创建索引时，就会创建一个索引段。
 占用存储空间的每一个对象，都存储在段中。
 区(extent):是文件中逻辑上连续的分配空间。每个段至少一个区，回滚段至少两个区。
 如果一个对象超过了区的大小，那么系统会自动分配另一个区。
 块(block):是系统中最小的分配单位。通常从磁盘读取的就是oracle块。
 一个段由一个区或者多个区组成，一个区由许多连续的块组成。
 数据库中允许有多种不同块的大小。在同一个表空间中，块的大小都一样。
 表空间(tablespace):每个段只属于一个表空间，一个表空间中可以有多个段。
  表空间由一个或者多个数据文件组成。
 
 表空间的增删改查
------------------------------------tablespace-start-----------------------------------------------
--创建表空间
create [temporary] tablespace userSpace  --表空间名称
datafile 'C:\app\yeduanqiao\oradata\dbname\useSpacer.dbf'    --文件路径及文件名
size 50M   --表空间大小
AUTOEXTEND ON --自动扩展
NEXT 50M   --每次自动扩展50M
maxsize 20480m  --表空间最大容量
extent management local; 

--给用户指定默认表空间
create user yuhang identified by yuhang  
default tablespace yuhang_data  
temporary tablespace yuhang_temp;  

--查看用户创建时的ddl语句
 select dbms_metadata.get_ddl('USER','CHANNEL') from  dual;
 select dbms_metadata.get_granted_ddl('OBJECT_GRANT','CHANNEL') from   dual;
 select dbms_metadata.get_granted_ddl('ROLE_GRANT','CHANNEL') from   dual;
 select dbms_metadata.get_granted_ddl('SYSTEM_GRANT','CHANNEL') from   dual;  

--查看本用户默认的表空间
 select username, default_tablespace from user_users;


---查看表空间名称、id，文件存储位置,初始大小
select tablespace_name,file_id,file_name,bytes
from dba_data_files
order by file_id;

 查看已经创建完的表空间创建语句。
 --set long 2000 //显示更多的文本
 --查看所有表空间创建语句。
 SELECT DBMS_METADATA.GET_DDL('TABLESPACE', TS.tablespace_name)  FROM DBA_TABLESPACES TS; 


--修改表空间大小
alter database
datafile 'C:\app\yeduanqiao\oradata\dbname\useSpacer.dbf'  
resize 1000M

--修改表空间大小:增加数据文件
alter tablespace USERSPACE
add datafile 'C:\app\yeduanqiao\oradata\dbname\USERSPACE2.dbf' 
size 500M


删除表空间及数据文件
 --删除空的表空间，但是不包含物理文件
drop tablespace tablespace_name;
--删除非空表空间，但是不包含物理文件
drop tablespace tablespace_name including contents;
--删除空表空间，包含物理文件
drop tablespace tablespace_name including datafiles;
--删除非空表空间，包含物理文件
drop tablespace tablespace_name including contents and datafiles;
--如果其他表空间中的表有外键等约束关联到了本表空间中的表的字段，就要加上CASCADE CONSTRAINTS
drop tablespace tablespace_name including contents and datafiles CASCADE CONSTRAINTS;

-------------------------------------tablespace-end-------------------------------------------- 

-------------------------------------------------------------------------------
 临时文件(temp file)
 这些文件用于完成基于磁盘的排序和临时存储。
 临时文件不产生redo文件，但产生undo文件。

-------------------------------------------------------------------------------
 控制文件(control file)
 保存数据文件，临时文件，重做日志文件的位置。

-------------------------------------------------------------------------------
 重做日志文件(redo log file)
 存放事务日志
 1.在线重做日志文件
 oracle至少有两个在线重做日志组，每个日志组都包含一个或者多个重做日志成员。
 oracle先写日志组1，写完切至日志组2，2写满时切换至1。
 2.归档日志文件
 没有以archivelog运行的数据库总有一天会丢失数据的。

-------------------------------------------------------------------------------
 闪回日志文件(flashback log file)
 存储数据库块的“前映像”。
 闪回数据库(flashback database):
 闪回恢复区(flashback recovery area):
